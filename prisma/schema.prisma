// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}
model Image {
  id Int @id @default(autoincrement())
  publicId String
  width Int
  height Int
  format String
  url String
  productId Int
  product Product @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
enum Role {
  ADMIN
  USER
}
model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  role Role @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders Order[]
}

model Order {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  items OrderItem[]
}

model Category {
  id Int @id @default(autoincrement())
  name String
  products Product[]
  image String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product { 
  id Int @id @default(autoincrement())
  name String
  price Int
  quantity Int
  description String
  images Image[]
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orderItems OrderItem[]
}
model OrderItem {
  id Int @id @default(autoincrement())
  orderId Int
  order Order @relation(fields: [orderId], references: [id])
  productId Int
  product Product @relation(fields: [productId], references: [id])
  quantity Int
  price Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}